[user]
	name = John Doe
	email = John.Doe@primary-email-domain.com

[includeIf "gitdir:C:/repos/tk/"]
	path = C:/repos/tk/.gitconfig

[includeIf "gitdir:D:/repos/tk/"]
	path = D:/repos/tk/.gitconfig

[core]
	autocrlf = true
	editor = C:/Program\\ Files/Git/usr/bin/vim.exe
	excludesfile = C:\\Users\\piotr\\Documents\\gitignore_global.txt
	longpaths = true

[alias]	
yesterday = !"git log --reverse --branches --since='yesterday' --author=$(git config --get user.email) --format=format:'%C(cyan bold ul) %ad %Creset %C(magenta)%h %C(blue bold) %s %Cgreen%d' --date=local"
recently = !"git log --reverse --branches --since='3 days ago' --author=$(git config --get user.email) --format=format:'%C(cyan bold ul) %ad %Creset %C(magenta)%h %C(blue bold) %s %Cgreen%d' --date=local"
standup = !"git log --reverse --branches --since='$(if [[ "Mon" == "$(date +%a)" ]]; then echo "last friday"; else echo "yesterday"; fi)' --author=$(git config --get user.email) --format=format:'%C(cyan bold ul) %ad %Creset %C(magenta)%h %C(blue bold) %s %Cgreen%d' --date=local"

[alias]	
lg1 = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
lg2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
lg = !"git lg1"
ls = log --pretty=format:'%C(green bold)%h%C(blue bold)  [%cn]  %C(red)%d  %C(cyan bold)%s' --decorate
la = log --pretty=format:'%C(green bold)%h%C(blue bold)  [%cn]  %C(red)%d  %C(cyan bold)%s' --decorate --all
ll = log --pretty=format:'%C(green bold)%h%C(blue bold)  [%cn]  %C(red)%d  %C(cyan bold)%s' --decorate --numstat

amend = commit -a --amend

# If you use shortened hashes, sometimes you may encounter a collision. The following alias prints out all commits whose hash start with given string.
[alias]
abbr = "!sh -c 'git rev-list --all | grep ^$1 | while read commit; do git --no-pager log -n1 --pretty=format:\"%H %ci %an %s%n\" $commit; done' -"
		
# easy conflict resolution
[alias]
gitkconflict = !gitk --left-right HEAD...MERGE_HEAD

# what's new since last command - typically pull
[alias]
new = !sh -c 'git log $1@{1}..$1@{0} "$@"'

[alias]
	topcom = shortlog -s -n --since=2017-01-01
	st = status -s -b -uall
	prettydiff = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative

[push]
	default = simple
	autoSetupRemote = true

[branch]
	autoSetupRebase = always

[help]
	autocorrect = 20

[color]
	ui = always
	branch = always
	diff = always
	interactive = always
	status = always
	grep = always
	pager = true
	decorate = always
	showbranch = always

[gpg]
	program = gpg

[commit]
	gpgSign = false

[tag]
	forceSignAnnotated = false

